const ipcData = require('../data/ipc_sections.json'); // тЬЕ JSON Data Load
const { fetchFromIndianKanoon } = require('../utils/fetchData'); // тЬЕ рд╕рд╣реА API рдлрд╝рдВрдХреНрд╢рди

exports.askQuestion = async (req, res) => {
    try {
        const userQuestion = req.body.question.toLowerCase();
        console.log("User Question:", userQuestion);

        // ЁЯФ╣ Simple Greetings Handler
        const greetings = ["hi", "hello", "hey", "namaste", "salam"];
        if (greetings.includes(userQuestion)) {
            return res.json({ results: [{ title: "рдирдорд╕реНрддреЗ! рдореИрдВ рдЖрдкрдХреА рдХреИрд╕реЗ рдорджрдж рдХрд░ рд╕рдХрддрд╛ рд╣реВрдБ?" }], source: 'greeting' });
        }

        // ЁЯФ╣ IPC рд╕реЗрдХреНрд╢рди рдирдВрдмрд░ рдирд┐рдХрд╛рд▓реЗрдВ (Regex рд╕реБрдзрд╛рд░)
        const sectionNumberMatch = userQuestion.match(/(?:section|рдзрд╛рд░рд╛)?\s*(\d+)/i);
        const sectionNumber = sectionNumberMatch ? sectionNumberMatch[1] : null;

        if (!sectionNumber) {
            return res.json({ results: [{ title: "рдХреГрдкрдпрд╛ рдПрдХ рд╕рд╣реА IPC рдзрд╛рд░рд╛ рдирдВрдмрд░ рджрд░реНрдЬ рдХрд░реЗрдВред" }], source: 'fallback' });
        }

        console.log("Extracted Section Number:", sectionNumber);

        // ЁЯФ╣ JSON рдбреЗрдЯрд╛ рд╕реЗ рдЪреЗрдХ рдХрд░реЗрдВ
        const ipcSection = ipcData.find(section => section.id === sectionNumber);
        if (ipcSection) {
            return res.json({ results: [{ 
                title: `IPC Section ${sectionNumber}`,
                description: ipcSection.description
            }], source: 'json' });
        }

        // ЁЯФ╣ JSON рдореЗрдВ рдирд╣реАрдВ рдорд┐рд▓рд╛ рддреЛ API рд╕реЗ Data рд▓рд╛рдПрдВ
        const apiResults = await fetchFromIndianKanoon(sectionNumber);
        if (apiResults && apiResults.length > 0) {
            const formattedResults = apiResults.map(result => ({
                title: `ЁЯУЬ <a href="${result.link}" target="_blank">${result.title}</a>`
            }));
            return res.json({ results: formattedResults, source: 'api' });
        }

        // ЁЯФ╣ рдЕрдЧрд░ API рд╕реЗ рднреА рдХреБрдЫ рдирд╣реАрдВ рдорд┐рд▓рд╛
        return res.json({ results: [{ title: `рдзрд╛рд░рд╛ ${sectionNumber} рд╕реЗ рд╕рдВрдмрдВрдзрд┐рдд рдХреЛрдИ рдЬрд╛рдирдХрд╛рд░реА рдирд╣реАрдВ рдорд┐рд▓реАред` }], source: 'not_found' });

    } catch (error) {
        console.error("тЭМ Error in chatbotController:", error.message);
        return res.status(500).json({ results: [{ title: "рд╕рд░реНрд╡рд░ рдореЗрдВ рд╕рдорд╕реНрдпрд╛ рдЖ рд░рд╣реА рд╣реИред рдХреГрдкрдпрд╛ рдмрд╛рдж рдореЗрдВ рдкреНрд░рдпрд╛рд╕ рдХрд░реЗрдВред" }] });
    }
};
